{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-posts-query-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Coding Blog","social":[{"name":"twitter","url":"https://twitter.com/"},{"name":"github","url":"https://github.com/hakod"}]}},"allBlogPost":{"edges":[{"node":{"id":"4928befc-3e8b-5253-aa2a-4743efa711ad","excerpt":"props props는 임의의 데이터 객체입니다. 여기에는 React…","slug":"/react-key-concepts/","title":"React Key Concepts","date":"January 21, 2020","tags":[]}},{"node":{"id":"541181a8-0a45-5f63-b01a-2ed0afe1ae71","excerpt":"proto proto 는 브라우저가 프로토타입 객체에 부여하는 이름이다. Constructor Constructor…","slug":"/proto-constructor-prototype/","title":"__proto__, Constructor, and Prototype","date":"January 03, 2020","tags":[]}},{"node":{"id":"9f7e148e-a76c-5b9f-8ed7-04c7b7a516d3","excerpt":"What is Time complexity 시간 복잡성은 입력 n…","slug":"/time-complexity/","title":"Time complexity","date":"January 02, 2020","tags":[]}},{"node":{"id":"0c8ebaf8-84d2-5dd6-b5b6-7cd941d743e1","excerpt":"TIL Advanced data structures Linked List Linked List…","slug":"/advanced-data-structures/","title":"Advanced data structures","date":"December 30, 2019","tags":[]}},{"node":{"id":"3e7e7a51-9d45-53c7-a021-843a28e59f6a","excerpt":"TIL Stack and Queue Stack 스택은 LIFO(Last in, first out) 순서를 따르는 데이터 구조다. 스택에는 세 가지 주요 방법이 있다. Push() 스택의 맨 위에 요소 추가 Pop() 스택 상단에서 요소 제거 Peek…","slug":"/basic-data-structures/","title":"Basic data structures","date":"December 28, 2019","tags":[]}},{"node":{"id":"d730aa26-cf7a-5d31-975a-00d5b170154b","excerpt":"What is OOP OOP는 데이터 모델의 청사진을 활용하는 프로그래밍 설계 철학이다. OOP…","slug":"/oop/","title":"OOP, JS Object Instantiation Patterns, and Prototype","date":"December 28, 2019","tags":[]}},{"node":{"id":"291b5446-27c2-5d21-affe-2a640c654a35","excerpt":"Node.js & Runtime 런타임은 코드가 실행될 수 있는 환경이다. Javascript의 경우, html 태그를 위해 첨부된 브라우저가 있다. 또 다른 런타임은 Node.js라고 하는데, \"node 'file name…","slug":"/nodejs/","title":"Node.js & Runtime","date":"December 25, 2019","tags":[]}},{"node":{"id":"78dcc508-4be4-5640-bf77-fe4499eefb10","excerpt":"The concurrency model describes how a programming language executes code independent of order to achieve improved performance. Modern…","slug":"/my-second-post/","title":"Event Loop","date":"October 22, 2019","tags":[]}},{"node":{"id":"1a377eea-dc83-52b2-82fe-1ae85c312efb","excerpt":"What is Closure Closure allows a function to reference values outside its scope. Closure is the function and its local variables stored for…","slug":"/hello-world/","title":"Scope and Closure","date":"October 21, 2019","tags":[]}}]}},"pageContext":{}}}